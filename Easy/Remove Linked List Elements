Given the head of a linked list and an integer val, remove all the nodes of the linked list that has Node.val == val, and return the new head.

 

Example 1:


Input: head = [1,2,6,3,4,5,6], val = 6
Output: [1,2,3,4,5]
Example 2:

Input: head = [], val = 1
Output: []
Example 3:

Input: head = [7,7,7,7], val = 7
Output: []
 

Constraints:

The number of nodes in the list is in the range [0, 104].
1 <= Node.val <= 50
0 <= val <= 50


//CODE

package day18;

public class RemoveElements {
	 public ListNode removeElements(ListNode head, int val) {
	        // Dummy before head simplifies deletions at head
	        ListNode dummy = new ListNode(-1);
	        dummy.next = head;

	        ListNode prev = dummy;
	        ListNode cur = head;

	        while (cur != null) {
	            if (cur.val == val) {
	                // skip cur
	                prev.next = cur.next;
	                // move cur forward but keep prev same
	                cur = prev.next;
	            } else {
	                // keep node, move both pointers forward
	                prev = cur;
	                cur = cur.next;
	            }
	        }
	        return dummy.next;
	    }

	    // helper to print list
	    public void printList(ListNode head) {
	        ListNode t = head;
	        while (t != null) {
	            System.out.print(t.val + (t.next != null ? " → " : ""));
	            t = t.next;
	        }
	        System.out.println();
	    }

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		  // build: 1 → 2 → 6 → 3 → 4 → 5 → 6
        ListNode h = new ListNode(1);
        h.next = new ListNode(2);
        h.next.next = new ListNode(6);
        h.next.next.next = new ListNode(3);
        h.next.next.next.next = new ListNode(4);
        h.next.next.next.next.next = new ListNode(5);
        h.next.next.next.next.next.next = new ListNode(6);

        RemoveElements sol = new RemoveElements();
        System.out.print("Original: ");
        sol.printList(h);

        ListNode res = sol.removeElements(h, 6);
        System.out.print("After removing 6: ");
        sol.printList(res);

	}

}
