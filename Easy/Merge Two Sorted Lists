ou are given the heads of two sorted linked lists list1 and list2.

Merge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

 

Example 1:


Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]
Example 2:

Input: list1 = [], list2 = []
Output: []
Example 3:

Input: list1 = [], list2 = [0]
Output: [0]
 

Constraints:

The number of nodes in both lists is in the range [0, 50].
-100 <= Node.val <= 100
Both list1 and list2 are sorted in non-decreasing order.

//CODE

package day12;

public class MergeTwoSortedLists {
	public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(-1); // dummy head
        ListNode tail = dummy;             // tail pointer

        // Walk both lists
        while (l1 != null && l2 != null) {
            if (l1.val <= l2.val) {
                tail.next = l1;   // attach l1 node
                l1 = l1.next;     // move l1
            } else {
                tail.next = l2;   // attach l2 node
                l2 = l2.next;     // move l2
            }
            tail = tail.next;     // move tail forward
        }

        // Attach whichever list remains
        if (l1 != null) {
            tail.next = l1;
        } else {
            tail.next = l2;
        }

        return dummy.next; // head of merged list
    }
	
	public void printList(ListNode head) {
        ListNode temp = head;
        while (temp != null) {
            System.out.print(temp.val + " → ");
            temp = temp.next;
        }
        System.out.println("null");
    }

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		// create list1: 1 → 3 → 5
        ListNode l1 = new ListNode(1);
        l1.next = new ListNode(3);
        l1.next.next = new ListNode(5);

        // create list2: 2 → 4 → 6
        ListNode l2 = new ListNode(2);
        l2.next = new ListNode(4);
        l2.next.next = new ListNode(6);

        MergeTwoSortedLists obj = new MergeTwoSortedLists();
        System.out.print("List 1: ");
        obj.printList(l1);
        System.out.print("List 2: ");
        obj.printList(l2);

        ListNode merged = obj.mergeTwoLists(l1, l2);
        System.out.print("Merged List: ");
        obj.printList(merged);


	}

}
