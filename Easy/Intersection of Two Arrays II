Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must appear as many times as it shows in both arrays and you may return the result in any order.

 

Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2,2]
Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [4,9]
Explanation: [9,4] is also accepted.
 

Constraints:

1 <= nums1.length, nums2.length <= 1000
0 <= nums1[i], nums2[i] <= 1000


//CODE

package day2;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class Intersection_of_TwoArrays_II {
	public static int[] inter(int[] num1, int[] num2) {
		HashMap<Integer, Integer> map = new HashMap<>();
		List<Integer> result = new ArrayList<>();
		
		for(int num: num1)
		{
			map.put(num, map.getOrDefault(num, 0)+1);
		}
		
		
		for(int num:num2) {
			if(map.containsKey(num) && map.get(num) >0) {
				result.add(num);
				map.put(num, map.get(num)-1);
			}
		}
		
		
		int[] res = new int[result.size()];
		for(int i=0;i<result.size();i++) {
			res[i] = result.get(i);
		}
		return res;
		
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] num1 = {1,2,2,1};
		int[] num2 = {2,2};
		int[] ans = inter(num1,num2);
		System.out.print("Intersection: ");
        for (int num : ans) {
            System.out.print(num + " ");
        }

	}

}
